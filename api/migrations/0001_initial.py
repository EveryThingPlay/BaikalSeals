# Generated by Django 3.2.7 on 2021-10-03 05:41

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_alter_user_username'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.ImageField(unique=True, upload_to='')),
                ('role', models.CharField(choices=[('0', 'employee'), ('1', 'teamlead'), ('2', 'boss')], default='0', max_length=20)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=100)),
                ('father_Name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True, verbose_name='email adress')),
                ('vacationName', models.CharField(max_length=200)),
                ('vacationRole', models.CharField(max_length=150)),
                ('manager', models.CharField(max_length=150)),
                ('passManager', models.CharField(max_length=150)),
                ('phone', models.IntegerField(null=True)),
                ('extraPhone', models.IntegerField(blank=True, null=True)),
                ('spentaimes', models.TextField(blank=True)),
                ('remote', models.BooleanField(default=False)),
                ('skype', models.CharField(blank=True, max_length=36, null=True)),
                ('telegram', models.CharField(blank=True, max_length=32, null=True)),
                ('birthday', models.DateField(null=True)),
                ('office', models.CharField(max_length=60)),
                ('division', models.CharField(max_length=100)),
                ('entity', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('employment', models.DateField(null=True)),
                ('workStart', models.DateField(null=True)),
                ('lastChanged', models.DateTimeField(null=True)),
                ('admChanged', models.CharField(default='boss', max_length=50)),
                ('gender', models.CharField(choices=[('1', 'male'), ('2', 'female'), ('3', 'unknown')], default='3', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('theme', models.CharField(default='iOS Разработка', max_length=50)),
                ('type', models.CharField(default='Выступление спикера', max_length=50)),
                ('format', models.CharField(default='Дистанционное мероприятие', max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('datetime', models.DateTimeField(null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('1', 'junior'), ('2', 'middle'), ('3', 'senior'), ('4', 'teamlead')], max_length=10)),
                ('title', models.CharField(blank=True, max_length=50)),
                ('salary', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('important', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=50)),
                ('finished', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='vacation_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_date', models.DateField(null=True)),
                ('last_date', models.DateField(null=True)),
                ('paid', models.BooleanField(default=True)),
                ('contact', models.IntegerField(null=True)),
                ('worker', models.CharField(blank=True, max_length=100)),
                ('approved', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.BooleanField(default=False)),
                ('todo', models.CharField(max_length=50, null=True)),
                ('done', models.BooleanField(default=False)),
                ('proof', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='sick_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_date', models.DateField(null=True)),
                ('last_date', models.DateField(null=True)),
                ('case', models.TextField()),
                ('contact', models.IntegerField(null=True)),
                ('worker', models.CharField(blank=True, max_length=100)),
                ('approved', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='question',
            fields=[
                ('number', models.IntegerField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.survey')),
            ],
        ),
        migrations.CreateModel(
            name='long_sick_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_date', models.DateField(null=True)),
                ('last_date', models.DateField(null=True)),
                ('case', models.TextField(default='Заболел')),
                ('contact', models.IntegerField(null=True)),
                ('worker', models.CharField(blank=True, max_length=100)),
                ('document', models.FileField(upload_to='')),
                ('approved', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='finance_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('price', models.FloatField(null=True)),
                ('approved', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.position'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
